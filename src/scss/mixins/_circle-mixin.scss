@mixin transformRight($num,$transform,$size ){
  &:nth-child(#{$num}){
    p{
      right: $transform*$size;
      top: $size/2;
    }
  }
}
@mixin transformLeft($num,$transform,$size ){
  &:nth-child(#{$num}){
    p{
      left: $transform*$size;
      top: $size/2;
    }
  }
}

@mixin circle-diagram($size, $item-size, $numOfItems) {
  position: relative;
  width:  $size;
  height: $size;
  padding: 0;
  border-radius: 50%;

  > * {
    display: block;
    position: absolute;
    top:  50%;
    left: 50%;
    width:  $item-size;
    height: $item-size;
    margin: -($item-size / 2);

    $angle: (360 / $numOfItems);
    $rot: -90;

    @for $i from 1 through $numOfItems {
      &:nth-of-type(#{$i}) {
        transform:
                rotate($rot * 1deg)
                translate($size / 2)
                rotate($rot * -1deg);
      }

      $rot: $rot + $angle;
    }
  }

  img{
    width:  $item-size;
    height: $item-size;
  }


  div{
    p{
      position: absolute;
    }
    &:first-child{
      display: flex;
      justify-content: center;
      p{
        top:-2em;
        right: -0.5*$item-size;
      }
    }

    @include transformRight(2,-5.5,$item-size);
    @include transformRight(3,-7,$item-size);
    @include transformRight(4,-4,$item-size);
    @include transformRight(5,-6.5,$item-size);
    @include transformRight(6,-5.5, $item-size);

    &:nth-child(7){
      p{
        margin-top:1em;
        left: -0.5*$item-size;
      }
    }
    @include transformLeft(8,-6.5,$item-size);
    @include transformLeft(9,-4.8,$item-size);
    @include transformLeft(10,-2.5,$item-size);
    @include transformLeft(11,-5.2,$item-size);
    @include transformLeft(12,-2.5,$item-size);

  }
}

